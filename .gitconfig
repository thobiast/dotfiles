# separate file for username etc
[includeIf "gitdir:~/dotfiles/"]
    path = ~/.gitconfig-github

[includeIf "gitdir:~/github/"]
    path = ~/.gitconfig-github

[includeIf "gitdir:~/repo/"]
    path = ~/.gitconfig-work

[core]
    editor = vim
    excludesfile = ~/.gitignore
    pager = diff-so-fancy | less --tabs=4 -RFX

[branch "master"]
    mergeoptions = --ff-only

[pull]
    rebase = true

[merge]
    tool = vimdiff

[color]
    ui = true

[alias]
    ls = log --graph --pretty=format:'%C(yellow)%h - %cd %C(reset)| %C(bold blue)[%cn] %C(reset)| %s %C(red)%d%C(reset)' --date=short
    lsf = log --graph --pretty=format:'%C(yellow)%h %cd %C(reset)| %C(bold blue)[%cn] %C(reset)| %s %C(red)%d%C(reset)' --date=short --name-status
    lsff = log --graph --pretty=format:'%C(yellow)%h - %cd %C(reset)| %C(bold blue)[%cn] %C(reset)| %s %C(red)%d%C(reset)' --date=short -u
    # list remote only commits, i.e., commit that are not local
    lsremote = log --graph --pretty=format:'%C(yellow)%h - %cd %C(reset)| %C(bold blue)[%cn] %C(reset)| %s %C(red)%d%C(reset)' --date=short @{u}...HEAD
    lsremotef = log --pretty=format:'%C(yellow)%h %cd %C(reset)| %C(bold blue)[%cn] %C(reset)| %s %C(red)%d%C(reset)' --date=short --name-status @{u}...HEAD
    lsremoteff = log --graph --pretty=format:'%C(yellow)%h - %cd %C(reset)| %C(bold blue)[%cn] %C(reset)| %s %C(red)%d%C(reset)' --date=short -u @{u}...HEAD
    lsallremote = log --graph --pretty=format:'%C(yellow)%h - %cd %C(reset)| %C(bold blue)[%cn] %C(reset)| %s %C(red)%d%C(reset)' --date=short @{u}
    alias = !git config --list | sed -n '/^alias/s/alias\\.\\([^=]*\\)=\\(.*\\)/\\1\\t=> \\2/p' | sort
    ba = branch -av
	st = status
	co = checkout
	cob = checkout -b
	gone = "!f() { git fetch --prune; git branch -vv | awk '/: gone]/{print $1}' | xargs git branch -d; }; f"
    diffst = diff --cached # changes between staging/index area and last commit. what will be commited if you run "git commit" without "-a"
    diffwd = diff HEAD # Show difference between working directory and last commit.what you would be committing if you run "git commit -a". If you have all changes staged for commit, then both commands will output the same diffstage diffwtree
    diffremote = diff @{u}
    difflastcom = "!f() { git diff --name-status -r "HEAD~$1" HEAD; }; f" # show name of files changes in last n commits.. n parameter
    difflastcomf = "!f() { git diff -r "HEAD~$1" HEAD; }; f" # show diff in last n commits.. n parameter
    diffcom = "!f() { git diff --name-status $1^ $1; }; f" # show diff (changes on a specific commit)
    diffcomf = "!f() { git diff $1^ $1; }; f" # show diff (changes on a specific commit)
    filelog = log -u # specify  a file and see its history
    unstage = reset HEAD # Unstage any files that have been added to the staging area
    undolc = reset --soft HEAD~1 # undo last commit but keep changes in working tree
    st = status -sb         # smarter status - include tag and branch info
    lstf = ls-tree --full-tree --name-only -r HEAD # list files tracked
    lstfd = "!f() { git log --pretty=format: --name-only --diff-filter=A | sort - | sed '/^$/d'; }; f" # list files tracked including deleted files
    baname = symbolic-ref --short HEAD
    pushup = !git push --set-upstream origin $(git baname)
